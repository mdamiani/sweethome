# set terminal
set-option -g default-terminal screen-256color
set-window-option -g xterm-keys on

# Toggle mouse on with ^B M
bind M \
	set -g mode-mouse on \;\
	set -g mouse-resize-pane on \;\
	set -g mouse-select-pane on \;\
	set -g mouse-select-window on \;\
	display 'Mouse: ON'

# Toggle mouse off with ^B m
bind m \
	set -g mode-mouse off \;\
	set -g mouse-resize-pane off \;\
	set -g mouse-select-pane off \;\
	set -g mouse-select-window off \;\
	display 'Mouse: OFF'

# we use vim
set-window-option -g mode-keys vi

# listen for activity on no window
#set -g bell-action none
# list for activity on all windows
set -g bell-action any

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
#set -g set-titles on
#set-option -g set-titles-string "tmux:#I [ #T ]"

# don't wait after sending an escape
set -s escape-time 0

set -g status-bg default
set -g status-fg default
set-window-option -g window-status-current-attr underscore
set-window-option -g automatic-rename on
set-window-option -g utf8 on
set-option -g pane-active-border-fg green

# toggle statusbar
bind-key b set-option status

# ctrl-Ins create a new window and retain the current path
#bind-key -n C-IC new-window
#bind-key -n C-IC run-shell 'tmux new-window "cd $(tmux display -p "\$TMUXPWD_#I#P"); exec \$SHELL"'

# split windows
#bind-key h run-shell 'tmux split-window -v "cd $(tmux display -p "\$TMUXPWD_#I#P"); exec \$SHELL"'
#bind-key v run-shell 'tmux split-window -h "cd $(tmux display -p "\$TMUXPWD_#I#P"); exec \$SHELL"'
bind-key k confirm-before kill-pane

# ctrl-prev/next cycles through windows
bind-key -n C-NPage next
bind-key -n C-PPage prev

# ctrl-shift-prev/next moves windows
bind-key -n C-S-NPage swap-window -t +
bind-key -n C-S-PPage swap-window -t -

# ctrl-up/down/left/right cycles through panes
bind-key -n C-up select-pane -U
bind-key -n C-down select-pane -D
bind-key -n C-left select-pane -L
bind-key -n C-right select-pane -R

# ctrl-prev to enter copy mode
bind-key -n S-PPage copy-mode -u

# v and y like vi in copy-mode
bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# copy mode
## list keys: tmux list-keys -t vi-copy
bind-key -t vi-copy -n Home start-of-line
bind-key -t vi-copy -n End end-of-line
## alt-movements
bind-key -t vi-copy -n M-h previous-word
bind-key -t vi-copy -n M-j page-down
bind-key -t vi-copy -n M-k page-up
bind-key -t vi-copy -n M-l next-word

# enable native xterm scrolling with Shift + PageUp and mouse wheel in tmux
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#set -g terminal-overrides 'xterm*:knp=\033[5~:smcup@:rmcup@'

# scrollback buffer n lines
set -g history-limit 10000

# on-screen time for display-panes in ms
set -g display-panes-time 2000

bind r \
	source-file ~/.tmux.conf \; \
	display-message 'Load ~/.tmux.conf'

# Load platform specific configuration
if-shell 'test "$(uname)" = "Linux"' 'source-file ~/.tmux-linux.conf'
#if-shell 'test "$(uname)" = "Darwin"' 'source-file ~/.tmux-macosx.conf'

