# set terminal
set-option -g default-terminal screen-256color
set-window-option -g xterm-keys on

# use mouse
set-window -g mode-mouse on
set-option -g mouse-select-pane off

# we use vim
set-window-option -g mode-keys vi
set-window-option -g mode-mouse off

# listen for activity on no window
#set -g bell-action none
# list for activity on all windows
set -g bell-action any

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
#set -g set-titles on
#set-option -g set-titles-string "tmux:#I [ #T ]"

# don't wait after sending an escape
set -s escape-time 0

set -g status-bg default
set -g status-fg default
set-window-option -g window-status-current-attr underscore
set-window-option -g automatic-rename on
set-window-option -g utf8 on
set-option -g pane-active-border-fg green

#set -g status-left ‘#[fg=default]#H’
#set -g status-right ‘#[fg=yellow]#(uptime | cut -d “,” -f 2-)’
#set -g status-interval 1
#set -g status-right '#[default]#(cut -d " " -f 1-4 /proc/loadavg) %Y-%m-%d %H:%M '

# toggle statusbar
bind-key b set-option status

# ctrl-Ins create a new window and retain the current path
#bind-key -n C-IC new-window
bind-key -n C-IC run-shell 'tmux new-window "cd $(tmux display -p "\$TMUXPWD_#I#P"); exec \$SHELL"'

# split windows
bind-key h run-shell 'tmux split-window -v "cd $(tmux display -p "\$TMUXPWD_#I#P"); exec \$SHELL"'
bind-key v run-shell 'tmux split-window -h "cd $(tmux display -p "\$TMUXPWD_#I#P"); exec \$SHELL"'
bind-key k confirm-before kill-pane

# ctrl-prev/next cycles through windows
bind-key -n C-NPage next
bind-key -n C-PPage prev

# ctrl-shift-prev/next moves windows
bind-key -n C-S-NPage swap-window -t +
bind-key -n C-S-PPage swap-window -t -

# ctrl-up/down/left/right cycles through panes
bind-key -n C-up select-pane -U
bind-key -n C-down select-pane -D
bind-key -n C-left select-pane -L
bind-key -n C-right select-pane -R

# open a man-page in new window
#bind / command-prompt "split-window 'exec man %%'"
# quick view of processes
#bind '~' split-window "exec zsh -c 'htop -u fifr'"

# v and y like vi in copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# copy mode
#bind-key -n C-PPage copy-mode -u
bind-key -t vi-copy -n Home history-top
bind-key -t vi-copy -n End history-bottom
## list keys: tmux list-keys -t vi-copy
## alt-movements
bind-key -t vi-copy -n M-h previous-word
bind-key -t vi-copy -n M-j page-down
bind-key -t vi-copy -n M-k page-up
bind-key -t vi-copy -n M-l next-word

# handle mouse wheel
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# CLIPBOARD selection integration
# Copy tmux paste buffer to CLIPBOARD
#bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
# Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# scrollback buffer n lines
set -g history-limit 10000

# on-screen time for display-panes in ms
set -g display-panes-time 2000

bind r source-file ~/.tmux.conf
